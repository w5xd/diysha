#!/usr/local/bin/perl
#Copyright (c) 2014 by Wayne Wright, Round Rock, Texas.
#See license at http://github.com/w5xd/diysha/blob/master/LICENSE.md
# cgi script that generates a page that will play a series of jpg files

use strict;
use warnings;
use HomeAutomation::WebcamRecordConfig;
use CGI;

my $maxFilesInMovie = 50;
my $q               = CGI->new;

# Process an HTTP request
print $q->header();
print $q->header('text/html');
my $v = $q->param('webcam');

#early error exit
if ( !defined($v) ) {
    print $q->start_html( "-title" => "player" );
    print "<p>no webcam</p>";
    $q->end_html;
    exit 0;
}

my $f = HomeAutomation::WebcamRecordConfig->new($v);

#early error exit
if ( !defined($f) ) {
    print $q->start_html( "-title" => "player" );
    print "<p>invalid webcam</p>";
    $q->end_html;
    exit 0;
}

# Prepare various HTTP responses
my $filesInMovie = $q->param('numFiles');
$filesInMovie = $maxFilesInMovie if ( $filesInMovie > $maxFilesInMovie );
my $movieName = $q->param('start');
my $loc = $f->getLocation();
opendir( my $dh, $loc ) or die $!;
my %files;
while ( readdir $dh ) {
    my $thisFile = $_;
    next if !( $thisFile =~ /\.jpg$/i );
    next if ( -d $thisFile );
    $files{$thisFile} = 0;
}
closedir $dh;

#sorting must match that in browseWebcamRecords
my @fnameSort = sort {(stat "$loc/$b")[9] <=> (stat "$loc/$a")[9]} keys %files;
my $found     = 0;
my @movies;
for (@fnameSort) {
    my $fn = $_;
    last if ( $filesInMovie <= 0 );
    $found = 1 if ( $fn eq $movieName );
    if ($found) {
        push @movies, $fn;
        $filesInMovie--;
    }
}

if ($found) {
    # here we have a list of jpg's to annimate
    @movies = reverse @movies; #switch to ascending time order
    my $imgListInit;
    my $first   = 1;
    my $urlBase = $f->urlBase();
    for (@movies) {
        if (!$first) {
        	$imgListInit .= ",";
		$imgListInit .= "\n";
	}
        $imgListInit .= '"' . $urlBase . $_ . '"';
        $first = 0;
    }
    my $JavaScript = <<END;

var imgList = [];
var imgNum = 0;
var waiting = 1; // the 1 in body onload

if (document.images) {     // Preload images
var imgListNames = [
$imgListInit
];

for (i = 0; i < imgListNames.length; i++) {
   imgList.push (new Image);
   imgList[i].src = imgListNames[i];
}
}

function timeimgs() {  // Reusable timer
    waiting++;
    thetimer = setTimeout("imgturn()", 500);
}

function imgturn() {   
    --waiting;
    if (document.images) {
        document["animated"].src = eval("imgList[" + imgNum + "].src");

    imgNum += 1;
    if (imgNum < imgList.length) {        
    	timeimgs();
    }
   }
}

function restart() {
    imgNum = 0;
   if (waiting != 0) return;
   waiting++;
   imgturn();
}
END

    print $q->start_html(
        -title  => "Webcam Recording Player",
        -script => $JavaScript,
        -onload => "imgturn();"
    );
    print <<BODY
<div align="center">
<img src="" name="animated" alt="Loading...">
</div>
<div align="center">
<input type="button" value="Again" onclick="restart();"/>
</div>
BODY
      ;
} else { print $q->start_html(-title => "No such file"); }
print $q->end_html;

