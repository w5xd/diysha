#!/bin/bash
#This script sets up for the procFurnace executable implemented in ProcFurnace.cpp
#That exectuable expects to read the stdout generated by this script.
#Why?
#This results in a single polling frequency for both the USB thermometer (at pcsensor)
#and for the furnace controller (using the modtronix box). This scheme puts them in sync.
#Combines the various temperature sensors in a single stdout
if [ $# -ne 1 ] ; then
   echo "Weather URL command argument required" 1>&2
   exit 1;
fi

echo '*** pcsensor ***'
../pcsensor-0.0.2/pcsensor -f
RES=$?
if [ $RES -ne 0 ] ; then
    date 1>&2
    echo "pcsensor failed $RES" 1>&2
    exit $RES #don't bother with rest if this bit failed.
fi

echo '*** noaa temperature ***'
./getReportedTemp "$1"
RES=$?
if [ $RES -ne 0 ] ; then
    echo "getReportedTemp failed $RES" 1>&2
fi
echo "extra line just to make sure parser picks up furnce.cgi if getReportedTemp fails"
echo '*** furnace.cgi ***'
if [[ 0 ]] ; then
curl --silent --max-time 30 $FURNACE_LOGIN http://$FURNACE_IP/furnace.cgi
RES=$?
if [ $RES -ne 0 ] ; then
    date 1>&2
    echo "curl furnace.cgi failed $RES" 1>&2
fi
else
    echo "no furnace" 
fi

